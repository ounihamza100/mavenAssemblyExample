<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>maven-assembly-example</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <spring.version>4.2.2.RELEASE</spring.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <descriptorRefs>
<!--                    The assembly maven plugin comes out of the box with some predefined descriptors : -->

<!--                    jar-with-dependencies => Allow us to generate a jar package with all the dependencies defined in pom.xml file inside of it.
                        This is useful when we plan to deliver an auto-executable jar.-->
                        <descriptorRef>jar-with-dependencies</descriptorRef>

<!--                    bin =>  Use this predefined descriptor in order to create a binary distribution of your package.-->
                        <descriptorRef>bin</descriptorRef>

<!--                    src =>  Use this predefined descriptor in order to distribute your source code.
                        The output package will have the src folder content inside it.-->
                        <descriptorRef>src</descriptorRef>

<!--                    project => (since 2.2) Use this predefined descriptor in order to distribute your entire project minus the target folder content-->
                        <descriptorRef>project</descriptorRef>
                    </descriptorRefs>
                    <descriptors>
                        <descriptor>assembly/ourAssembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>trigger-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
